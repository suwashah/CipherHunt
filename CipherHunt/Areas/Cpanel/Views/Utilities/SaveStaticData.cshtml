@model CipherHunt.Areas.Cpanel.Models.StaticDataModel

@{
    ViewBag.Title = "Save Static Data";
}
@using (Html.BeginForm("", "", FormMethod.Post, new { @role = "form", @id = "f1", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12">
            <div class="card card-user card-radius-none">
                <div class="card-header card-header-primary">
                    <div class="card company"></div>
                    <h5 class="card-title">@ViewBag.TypeName</h5>
                    @Html.HiddenFor(m => m.Flag)
                    @Html.HiddenFor(m => m.ID)
                    @Html.HiddenFor(m => m.TYPE_ID)
                </div>
                <div class="card-body pd-lr-30">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @if (ViewBag.Message != null)
                                {
                                    <div class="alert alert-danger" role="alert">
                                        <i class="fa fa-danger"></i><span>@ViewBag.Message;</span>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.STATIC_VALUE, "Static Value (Label)", new { @class = "" })
                                        @Html.TextBoxFor(m => m.STATIC_VALUE, new { @class = "form-control", autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.STATIC_VALUE, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.STATIC_DATA, "Static Data", new { @class = "" })
                                        @Html.TextBoxFor(m => m.STATIC_DATA, new { @class = "form-control", autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.STATIC_DATA, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.DESCRIPTION, "Description", new { @class = "" })
                                        @Html.TextBoxFor(m => m.DESCRIPTION, new { @class = "form-control", autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.DESCRIPTION, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.HELPDESK_DETAIL, "Helpdesk Detail", new { @class = "" })
                                        @Html.TextBoxFor(m => m.HELPDESK_DETAIL, new { @class = "form-control", autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.HELPDESK_DETAIL, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OTHER_VALUE_1, "Other value 1", new { @class = "" })
                                        @Html.TextBoxFor(m => m.OTHER_VALUE_1, new { @class = "form-control", autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.OTHER_VALUE_1, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OTHER_VALUE_2, "Other value 2", new { @class = "" })
                                        @Html.TextBoxFor(m => m.OTHER_VALUE_2, new { @class = "form-control", autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.OTHER_VALUE_2, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OTHER_VALUE_3, "Other value 3", new { @class = "" })
                                        @Html.TextBoxFor(m => m.OTHER_VALUE_3, new { @class = "form-control", autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.OTHER_VALUE_3, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OTHER_VALUE_4, "Other value 4", new { @class = "" })
                                        @Html.TextBoxFor(m => m.OTHER_VALUE_4, new { @class = "form-control", autocomplete = "off" })
                                        @Html.ValidationMessageFor(m => m.OTHER_VALUE_4, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="btn-group" role="group">
                                            @Html.ActionLink("Back to List", "StaticDatas", "Utilities", new { route = @Html.Raw(CipherHunt.Library.StaticData.Encrypt("id=" + Model.TYPE_ID)) }, new { @class = "btn btn-warning btn-round" })
                                            <input type="submit" class="btn btn-success btn-round" value="Save" />
                                        </div>
                                        <br /><br />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}
@section Scripts{
    <script>
      
    </script>
}