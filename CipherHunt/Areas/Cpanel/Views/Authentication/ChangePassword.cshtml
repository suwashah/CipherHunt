@model CipherHunt.Models.ChangePasswordModel

@{
    ViewBag.Title = "Change Password";
    Layout = "~/Areas/Cpanel/Views/Shared/_MasterLayout2.cshtml";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12">
            <header>
                @*<h2>Change Password</h2>*@
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="none">
                    <polygon class="svg--sm" fill="white" points="0,0 30,100 65,21 90,100 100,75 100,100 0,100" />
                    <polygon class="svg--lg" fill="white" points="0,0 15,100 33,21 45,100 50,75 55,100 72,20 85,100 95,50 100,80 100,100 0,100" />
                </svg>
            </header>
            @*<h5 class="card-title">CHANGE PASSWORD</h5>*@
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group">
                        <h2 style="color: #173348;">Change Password <i class="fa fa-key"></i></h2>
                        <span class="text-description">
                            <b>Tips:</b> It's a good idea to use a strong password that you don't use elsewhere.
                        </span>
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.OldPassword, "Current password", new { @class = "" })
                        @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.OldPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewPassword, "New password", new { @class = "" })
                        @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, "Retype new password", new { @class = "" })
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", autocomplete = "off" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-success btn-round">Update</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
